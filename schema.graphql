type Protocol @entity {
  id: ID!
  address: String!
  paused: Boolean!
  l0Admin: [String!]!
  l1Admin: [String!]!
  l2Admin: [String!]!
}

type Pool @entity {
  id: ID!
  protocol: Protocol!

  name: String!
  symbol: String!

  # Rewards
  rewardTokens: [Token!]!
  rewardSpeeds: [BigInt!]!
  
  # Params
  feeToken: String!
  issuerAlloc: BigInt!
  oracle: String!
  paused: Boolean!
  totalSupply: BigInt!
  totalDebtUSD: BigDecimal!

  "Total revenue and burn by the pool"
  totalRevenueUSD: BigDecimal!
  totalBurnUSD: BigDecimal!

  # Assets
  synthIds: [String!]!
  collateralIds: [String!]!
  synths: [Synth!]! @derivedFrom(field: "pool")
  collaterals: [Collateral!]! @derivedFrom(field: "pool")
}

type PoolDayData @entity {
  id: ID!
  dayId: Int!
  pool: Pool!

  "Daily debt issued in USD"
  dailyDebtIssuedUSD: BigDecimal!
  dailyDebtBurnedUSD: BigDecimal!

  "Snapshot of the total debt in USD"
  totalDebtUSD: BigDecimal!
  "Snapshot of the total supply of the pool"
  totalSupply: BigInt!

  "Daily revenue collected from fees"
  dailyRevenueUSD: BigDecimal!
  "Debt burned from revenue fees"
  dailyBurnUSD: BigDecimal!

  "Total revenue fees collected by the pool"
  totalRevenueUSD: BigDecimal!
  "Total debt burned from revenue fees"
  totalBurnUSD: BigDecimal!
}

type CollateralDayData @entity {
  id: ID!
  dayId: Int!
  collateral: Collateral!

  "Daily deposits"
  dailyDeposits: BigInt!
  "Daily withdrawals"
  dailyWithdrawals: BigInt!

  cumulativeDeposits: BigInt!
  cumulativeWithdrawals: BigInt!
  totalDeposits: BigInt!
}

type SynthDayData @entity {
  id: ID!
  dayId: Int!
  synth: Synth!

  ## Activity
  dailyMinted: BigInt!
  dailyBurned: BigInt!

  ## Total by end of the day
  cumulativeMinted: BigInt!
  cumulativeBurned: BigInt!

  ## Total Supply by end of the day
  totalSupply: BigInt!
}

type Synth @entity {
  ## {synth}
  id: ID!
  pool: Pool!
  isEnabled: Boolean!
  mintFee: BigInt!
  burnFee: BigInt!
  token: Token!

  ## Activity
  cumulativeMinted: BigInt!
  cumulativeBurned: BigInt!
  totalSupply: BigInt!

  ## Price Data
  priceUSD: BigDecimal!
  lastPriceUpdate: Int!
}

type Collateral @entity {
  ## {collateral}-{pool}
  id: ID!
  pool: Pool!
  token: Token!

  ## Params
  isEnabled: Boolean!
  cap: BigInt!
  baseLTV: Int!
  liqThreshold: Int!
  liqBonus: Int!

  totalDeposits: BigInt! 
  cumulativeDeposits: BigInt!
  cumulativeWithdrawals: BigInt!

  totalPositions: Int!
  cumulativeEnteredPositions: Int!
  cumulativeExitedPositions: Int!

  ## Price Data
  priceUSD: BigDecimal!
  lastPriceUpdate: Int!
}

type Account @entity {
  id: ID!
  address: String!
  positions: [AccountPosition!]! @derivedFrom(field: "account")
}

type AccountPosition @entity {
  ## {account}-{pool}
  id: ID!
  account: Account!
  pool: Pool!
  balance: BigInt!
  collateralBalances: [AccountBalance!]! @derivedFrom(field: "accountPosition")
}

type AccountBalance @entity {
  id: ID!
  accountPosition: AccountPosition!
  collateral: Collateral!
  hasEntered: Boolean!
  balance: BigInt!
}

type Token @entity {
  id: ID!
  address: String!
  name: String!
  symbol: String!
  decimals: Int!
}