type Protocol @entity {
  id: ID!
  address: String!
  paused: Boolean!
  l0Admin: [String!]!
  l1Admin: [String!]!
  l2Admin: [String!]!
}

type Pool @entity {
  id: ID!
  protocol: Protocol!

  name: String!
  symbol: String!

  # Rewards
  rewardTokens: [Token!]!
  rewardSpeeds: [BigInt!]!

  # Params
  feeToken: String!
  issuerAlloc: BigInt!
  paused: Boolean!
  totalSupply: BigInt!
  totalDebtUSD: BigDecimal!

  "Total revenue and burn by the pool"
  totalRevenueUSD: BigDecimal!
  totalVolumeUSD: BigDecimal!
  totalBurnUSD: BigDecimal!
  poolDayData: [PoolDayData!]! @derivedFrom(field: "pool")
  poolHrData: [PoolHrData!]! @derivedFrom(field: "pool")

  oracle: String!
  fallbackOracle: String!
  pyth: String

  # Assets
  synthIds: [String!]!
  collateralIds: [String!]!
  synths: [Synth!]! @derivedFrom(field: "pool")
  collaterals: [Collateral!]! @derivedFrom(field: "pool")
}

type PoolDayData @entity {
  id: ID!
  dayId: Int!
  pool: Pool!

  "Daily debt issued in USD"
  dailyDebtIssuedUSD: BigDecimal!
  dailyDebtBurnedUSD: BigDecimal!

  "Snapshot of the total debt in USD"
  totalDebtUSD: BigDecimal!
  "Snapshot of the total supply of the pool"
  totalSupply: BigInt!

  "Daily revenue collected from fees"
  dailyRevenueUSD: BigDecimal!
  "Debt burned from revenue fees"
  dailyBurnUSD: BigDecimal!

  "Total revenue fees collected by the pool"
  totalRevenueUSD: BigDecimal!
  "Total debt burned from revenue fees"
  totalBurnUSD: BigDecimal!
}

type PoolHrData @entity {
  id: ID!
  hrId: Int!
  pool: Pool!

  hrDebtIssuedUSD: BigDecimal!

  hrDebtBurnedUSD: BigDecimal!

  totalDebtUSD: BigDecimal!

  totalSupply: BigInt!

  hrRevenueUSD: BigDecimal!

  hrBurnUSD: BigDecimal!

  totalRevenueUSD: BigDecimal!

  totalBurnUSD: BigDecimal!
}

type CollateralDayData @entity {
  id: ID!
  dayId: Int!
  collateral: Collateral!

  "Daily deposits"
  dailyDeposits: BigInt!
  "Daily withdrawals"
  dailyWithdrawals: BigInt!

  cumulativeDeposits: BigInt!
  cumulativeWithdrawals: BigInt!
  totalDeposits: BigInt!
}

type SynthDayData @entity {
  id: ID!
  dayId: Int!
  synth: Synth!

  ## Activity
  dailyMinted: BigInt!
  dailyBurned: BigInt!

  ## Total by end of the day
  cumulativeMinted: BigInt!
  cumulativeBurned: BigInt!

  ## Total Supply by end of the day
  totalSupply: BigInt!
}

type Synth @entity {
  ## {synth}
  id: ID!
  pool: Pool!
  isActive: Boolean!
  isDisabled: Boolean!
  mintFee: BigInt!
  burnFee: BigInt!
  token: Token!
  isFeeToken: Boolean!
  synthDayData: [SynthDayData!]! @derivedFrom(field: "synth")
  
  ## Activity
  cumulativeMinted: BigInt!
  cumulativeBurned: BigInt!
  totalSupply: BigInt!

  ## Price Data
  feed: String
  fallbackFeed: String
  priceUSD: BigDecimal!
  lastPriceUpdate: Int!

  createdAt: Int!
}

type Collateral @entity {
  ## {collateral}-{pool}
  id: ID!
  pool: Pool!
  token: Token!

  isPermit: Boolean!

  ## Params
  isActive: Boolean!
  cap: BigInt!
  baseLTV: Int!
  liqThreshold: Int!

  totalDeposits: BigInt!
  cumulativeDeposits: BigInt!
  cumulativeWithdrawals: BigInt!

  totalPositions: Int!
  cumulativeEnteredPositions: Int!
  cumulativeExitedPositions: Int!
  collateralDayData: [CollateralDayData!]! @derivedFrom(field: "collateral")

  ## Price Data
  feed: String
  fallbackFeed: String
  priceUSD: BigDecimal!
  lastPriceUpdate: Int!

  createdAt: Int!
}

type AccountDayData @entity {
  id: ID!
  dayId: Int!
  account: Account!
  dailyPoint: BigDecimal!
  dailyMintedUSD: BigDecimal!
  dailyBurnedUSD: BigDecimal!
}

type Account @entity {
  id: ID!
  totalPoint: BigDecimal!
  totalMintUSD: BigDecimal!
  totalBurnUSD: BigDecimal!
  referredBy: String!
  referredEarnedUSD: BigDecimal!
  referredVolumeUSD: BigDecimal!
  createdAt: BigInt!
  txnCount: Int!
  firstTxnRevenueUSD: BigDecimal!
  accountDayData: [AccountDayData!]! @derivedFrom(field: "account")
  positions: [AccountPosition!]! @derivedFrom(field: "account")
  mint: [Mint!]! @derivedFrom(field: "account")
  burn: [Burn!]! @derivedFrom(field: "account")
}

type AccountPosition @entity {
  ## {account}-{pool}
  id: ID!
  account: Account!
  pool: Pool!
  balance: BigInt!
  totalBorrowUSD: BigDecimal!
  totalRepayUSD: BigDecimal!
  collateralBalances: [AccountBalance!]! @derivedFrom(field: "accountPosition")
  borrow: [Borrow!]! @derivedFrom(field: "accountPosition")
  repay: [Repay!]! @derivedFrom(field: "accountPosition")
  dailyBalance: [AccountPositionDayData!]!
    @derivedFrom(field: "accountPosition")
  hourlyBalance: [AccountPositionHrData!]!
    @derivedFrom(field: "accountPosition")
}

type AccountPositionDayData @entity {
  id: ID!
  dayId: Int!
  dailyBalance: BigInt!
  accountPosition: AccountPosition!
}
# hourly data
type AccountPositionHrData @entity {
  id: ID!
  hrId: Int!
  hrBalance: BigInt!
  accountPosition: AccountPosition!
}

type AccountBalance @entity {
  id: ID!
  accountPosition: AccountPosition!
  collateral: Collateral!
  hasEntered: Boolean!
  balance: BigInt!
}

type Token @entity {
  id: ID!
  name: String!
  symbol: String!
  decimals: Int!
}

type Borrow @entity {
  id: ID!
  accountPosition: AccountPosition!
  amount: BigDecimal!
  totalSupply: BigDecimal!
  totalDebtUSD: BigDecimal!
}

type Repay @entity {
  id: ID!
  accountPosition: AccountPosition!
  amount: BigDecimal!
  totalSupply: BigDecimal!
  totalDebtUSD: BigDecimal!
}

type Mint @entity {
  id: ID!
  account: Account!
  synth: Synth!
  amount: BigDecimal!
  priceUSD: BigDecimal!
}

type Burn @entity {
  id: ID!
  account: Account!
  synth: Synth!
  amount: BigDecimal!
  priceUSD: BigDecimal!
}
